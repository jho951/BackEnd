events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # 로그 파일 (옵션)
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    upstream spring_boot_app {
        server spring_boot_app:8080;  # Spring Boot 애플리케이션
    }

    # Kibana 애플리케이션
    upstream kibana {
        server kibana:5601;  # Kibana 서비스
    }

    # Elasticsearch 애플리케이션
    upstream elasticsearch {
        server elasticsearch:9200;  # Elasticsearch 서비스
    }

    # HTTPS 설정
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL 설정
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 보안 헤더 추가
        add_header Access-Control-Allow-Origin "https://localhost" always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type' always;

        # HTTP -> HTTPS 리디렉션 설정
        error_page 497 https://$host$request_uri;

        # 리버스 프록시 포함
        include ./nginx/conf/*.conf;
    }

    # HTTP → HTTPS 리디렉션
    server {
        listen 80;
        # 여기는 localhost 대신 실제 도메인으로 설정할 수 있음
        server_name localhost;

        return 301 https://$host$request_uri;
    }
}
