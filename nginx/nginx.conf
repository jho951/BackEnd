events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # 로그 파일 (옵션)
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # 리버스 프록시 포함
    include /etc/nginx/conf.d/*.conf;

    upstream spring_boot_app {
        server spring_boot_app:8080;  # Spring Boot 애플리케이션
    }

    upstream kibana {
        server kibana:5601;  # Kibana 서비스
    }

    upstream elasticsearch {
        server elasticsearch:9200;  # Elasticsearch 서비스
    }

    server {
        listen 443 ssl;
        server_name localhost;  # 여기에서 localhost를 nginx로 변경하거나 실제 도메인 이름을 사용

        # SSL 설정
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privekey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 보안 헤더 추가
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type' always;

        # Elasticsearch 경로 설정
        location /elasticsearch/ {
            proxy_pass http://elasticsearch:9200;  # Elasticsearch로 리버스 프록시
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Kibana 경로 설정
        location /kibana/ {
            rewrite ^/kibana(/.*)$ $1 break;
            proxy_pass http://kibana:5601;  # Kibana로 리버스 프록시
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # HTTP -> HTTPS 리디렉션 설정
        error_page 497 https://$host$request_uri;

        # Spring Boot 애플리케이션 경로
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            proxy_pass http://spring_boot_app;  # Spring Boot 애플리케이션 리버스 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
        }

        # Swagger UI 경로 설정
        location /swagger-ui/ {
            proxy_pass http://spring_boot_app/swagger-ui/;  # Swagger UI 리버스 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
        }

        # OpenAPI Docs 경로 설정
        location /v3/api-docs/ {
            proxy_pass http://spring_boot_app/v3/api-docs/;  # OpenAPI Docs 리버스 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
        }

        # /v1/ API 경로 설정
        location /v1/ {
            proxy_pass http://spring_boot_app/v1/;  # v1 API 리버스 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
        }
    }

    # HTTP → HTTPS 리디렉트
    server {
        listen 80;
        server_name localhost;  # 여기서도 localhost를 nginx로 변경
        return 301 https://$host$request_uri;
    }
}
