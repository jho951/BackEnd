services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_boot_app
    platform: linux/amd64
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/cert.pem:/etc/nginx/ssl/cert.pem:ro
      - ./ssl/cert.key:/etc/nginx/ssl/cert.key:ro
    depends_on:
      - backend
    networks:
      - backend

volumes:
  mysql-data:
    driver: local

networks:
  backend:
    driver: bridge